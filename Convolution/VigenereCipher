package encryption.ciphers;

/**
 * This class implements the Encryptable interface and 
 * provides encryption and decryption using Vigenere cipher.
 */
public class VigenereCipher implements Encryptable {

	private String key;
	private int keyLength;

	
	/**
     * Constructs an object with the given password as the encryption key.
     *
     * @param password as the encryption key
     */
	public VigenereCipher(String password) {
		this.key = password;
		this.keyLength = password.length();
	}
	/**
     * Encrypts the given input string using the Vigenere cipher.
     *
     * @param inputs the string to encrypt
     * @return the encrypted string
     */
	@Override
	public String encrypt(String input) {
		StringBuilder encrypted = new StringBuilder() ;
		for(int i=0; i<input.length(); i++) {
			char c = input.charAt(i);
			char keyChar = key.charAt(i % keyLength);
			int shifts = (c - START_CHAR + keyChar - START_CHAR) % RANGE + START_CHAR;
			encrypted.append((char)shifts);
		}
		return encrypted.toString();
	}

	/**
     * Decrypts the given input string using the Vigenere cipher.
     *
     * @param inputs the string to decrypt
     * @return the decrypted string
     */
	@Override
	public String decrypt(String input) {
		StringBuilder decrypted = new StringBuilder() ;
		for(int i=0; i<input.length(); i++) {
			char c = input.charAt(i);
			char keyChar = key.charAt(i % keyLength);
			int shifts = (c - START_CHAR - (keyChar - START_CHAR) + RANGE) % RANGE + START_CHAR;
			decrypted.append((char)shifts);
		}
		return decrypted.toString();
	}

}
