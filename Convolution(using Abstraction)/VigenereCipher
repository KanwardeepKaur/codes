package encryption.ciphers;

import encryption.EncryptionType;

/**
 * This class implements the Encryptable interface and 
 * provides encryption and decryption using Vigenere cipher.
 */
public class VigenereCipher extends EncryptionType {

	private String key;
	private int keyLength;

	
	/**
     * Constructs an object with the given password as the encryption key.
     *
     * @param password password as the encryption key
     */
	public VigenereCipher(String password) {
		this.key = password;
		this.keyLength = password.length();
	}
	/**
     * Encrypts the given input string using the Vigenere cipher.
     *
     * @param input inputs the string to encrypt
     * @return the encrypted string
     */
	@Override
	public String encrypt(String input) {
		StringBuilder encrypted = new StringBuilder();
		int I = 0;
		for (int i = 0; i < input.length(); i++) {
			char currentChar = input.charAt(i);
			char shiftedChar = shiftChar(currentChar, key.charAt(I % keyLength) - START_CHAR);
			encrypted.append(shiftedChar);
			I++;
		}
		return encrypted.toString();
	}

	/**
     * Decrypts the given input string using the Vigenere cipher.
     *
     * @param inputs the string to decrypt
     * @return the decrypted string
     */
	@Override
	public String decrypt(String input) {
		StringBuilder decrypted = new StringBuilder();
		int I = 0;
		for (int i = 0; i < input.length(); i++) {
			char currentChar = input.charAt(i);
			char shiftedChar = shiftChar(currentChar, -(key.charAt(I % keyLength) - START_CHAR));
			decrypted.append(shiftedChar);
			I++;
		}
		return decrypted.toString();
	}

}
